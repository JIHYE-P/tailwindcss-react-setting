[{"D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\reportWebVitals.js":"1","D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\utils\\domElements.ts":"2","D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\index.js":"3","D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\App.js":"4","D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\utils\\tailwind-styled-components.tsx":"5","D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\utils\\tw-styled.js":"6","D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\utils\\styled-component.js":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":1663,"mtime":1609987861947,"results":"10","hashOfConfig":"9"},{"size":503,"mtime":1610005888107,"results":"11","hashOfConfig":"9"},{"size":1138,"mtime":1610012139821,"results":"12","hashOfConfig":"9"},{"size":2408,"mtime":1610010009890,"results":"13","hashOfConfig":"9"},{"size":1303,"mtime":1610010546274,"results":"14","hashOfConfig":"9"},{"size":999,"mtime":1610012109658,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"43kfzn",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\reportWebVitals.js",[],["33","34"],"D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\utils\\domElements.ts",[],["35","36"],"D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\index.js",[],"D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\App.js",["37","38"],"D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\utils\\tailwind-styled-components.tsx",["39"],"import React from \"react\";\r\nimport domElements from \"./domElements\";\r\nimport {classnames} from 'tailwindcss-classnames';\r\n\r\nconst cleanTemplate = (template: TemplateStringsArray, inheritedClasses: string = \"\") => {\r\n  const newClasses: string[] = template\r\n  .toString()\r\n  .trim()\r\n  .replace(/\\s{2,}/g, \" \")\r\n  .split(\" \")\r\n  .filter((c) => c !== \",\") // remove comma introduced by template to string\r\n\r\n  const inheritedClassesArray: any = inheritedClasses ? inheritedClasses.split(\" \") : []\r\n  return classnames(\r\n    ...inheritedClassesArray\r\n    .concat(newClasses) // add new classes\r\n    .filter((c: string) => c !== \" \") // remove empty classes\r\n    .filter((v: string, i: number, arr: string[]) => arr.indexOf(v) === i) // remove duplicate\r\n  ).split(\" \")\r\n}\r\n\r\nfunction parseTailwindClassNames(template: string[], ...templateElements: any[]) {\r\n  return template\r\n  .reduce((sum, n, index) => {\r\n    const templateElement = templateElements[index]\r\n    if (typeof templateElement === \"string\") {\r\n      return `${sum} ${n} ${templateElement}`\r\n    }\r\n    return `${sum} ${n}`\r\n  }, \"\")\r\n  .trim()\r\n  .replace(/\\s{2,}/g, \" \") // replace line return by space\r\n}\r\n\r\nexport type FunctionTemplate = (\r\n    template: TemplateStringsArray,\r\n    ...templateElements: any[]\r\n) => (props: { children?: any; [props: string]: any }) => any\r\n\r\nconst functionTemplate = (Element: any): FunctionTemplate => (\r\n  template, \r\n  ...templateElements\r\n  ) => \r\n    React.forwardRef(({ children, ...props }, ref) => {\r\n    return <Element \r\n      {...props} \r\n      ref={ref} \r\n      className={parseTailwindClassNames(cleanTemplate(template, props.className), ...templateElements.map((t) => t(props)) )}\r\n    >{children}</Element>\r\n})\r\n\r\nexport type IntrinsicElements = {\r\n  [key in keyof JSX.IntrinsicElements]: FunctionTemplate\r\n}\r\n\r\nconst intrinsicElements: IntrinsicElements = domElements.reduce(\r\n  (acc, domElement) => ({\r\n    ...acc,\r\n    [domElement]: functionTemplate(domElement)\r\n  }),\r\n  {} as IntrinsicElements\r\n)\r\n\r\nconst tw = Object.assign((Component: any) => functionTemplate(Component), intrinsicElements)\r\n\r\nexport default tw\r\n\r\n// const Template = tw.div`\r\n//   text-sm text-bold\r\n//   flex w-full h-full \r\n//   bg-gray-400\r\n// `\r\n// const newTemplate = styled(main)`grid grid-cols-3`;\r\n\r\n{/* <Template className=\"text-sm text-bold flex w-full h-full bg-gray-400\">\r\n  {children}\r\n</Template> */}\r\n\r\n","D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\utils\\tw-styled.js",[],"D:\\JIHYE\\+Reference\\tailwindcss-react-setting\\src\\utils\\styled-component.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":6,"column":7,"nodeType":"46","messageId":"47","endLine":6,"endColumn":18},{"ruleId":"44","severity":1,"message":"48","line":16,"column":7,"nodeType":"46","messageId":"47","endLine":16,"endColumn":11},{"ruleId":"49","severity":1,"message":"50","line":75,"column":1,"nodeType":"51","messageId":"52","endLine":77,"endColumn":16},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'BlogWrapper' is assigned a value but never used.","Identifier","unusedVar","'Blog' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]